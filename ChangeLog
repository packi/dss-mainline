dSS - digitalSTROM Server

v1.28.0	07.11.2014
	* add API for valve type settings, #7948
	* finalize event uploading mechanisms, #7883
	* fixed memory leak in webservice reply class
	* query more properties from vdc's (model version, etc.), #8040
	* added heating heating valve protection process, #7953
	* extended UMV support, #8011
	* added sanity checks when reading out devices
	* fix get temperature control config call, #8001

v1.27.0	24.10.2014
	* fixed event category name for sensor data upload
	* changed method of adding and removen devices from areas, #2310
	* added AddonToCloud event
	* fixed json/metering/getValues, #7723
	* render sensor types of a device in getStructure, #7726
	* send event on state changes, #7860
	* imestamp each event upon creation and upload this timestamp
	* fixed compile warning
	* fixed background for the SK device icon, #7732

v1.26.0	16.10.2014
	* fixed initialization of unplugged devices, #3789
	* fixed read out of device config bits, #3801
	* added device sensor sources and values, #3635
	* improved session handling, #3901, #3921
	* fixed trigger evaluation for subscriptions without force flag, #3838
	* replaced system JS scripts with C++ code, #4146
	* added dedicated websrvice connection, #4419
	* fixed subscription filter, #4422
	* added support for new device types, #4466
	* support raw fromdata from JS scripts for posting
	* removed all simulation related code, #1546
	* removed SOAP support
	* support device output channels, #3796, #3794
	* fixed memory leaks
	* added support for secure cookies
	* removed jssocket support, #5136
	* removed download handler
	* added support for dSUID
	* check sensor timestamps and provide validity information, #6471
	* added support for heating/climate devices
	* added unsigned int support to property system
	* fixed blocking of rrd, #7086
	* implemented sensor and event data uploader
	* added support for virtual devices, #6838
	* implemented sensor assignments to zones
	* added scripting backend methods for heating
	* added displayID for devices and vdCs

v1.22.5 18.11.2013
	* added some sanity checks for user input when requesting tokens

v1.22.4 08.11.2013
	* use configured base address for webservice, #3671
	* fix trigger comparisons, #3350

v1.22.3 28.10.2013
	* don't allow to assign AKMs/TKMs without output to multiple groups, #2686
	* avoid duplicate scene calls for alarm states, #2191, #2520

v1.22.2 15.10.2013
	* fix multibutton device detection (slave/not slave), #3146, #3147
	* improve some log messages
	* improve network interface enumeration
	* ignore scene state changes that are irrelevant for light, #3174

v1.22.1 01.10.2013
	* fixed missing file in dist tarball

v1.22.0 01.10.2013
	* make webservice URL configurable from command line, #3282
	* add boost 1.5 compatibility
	* add hail system script to provide a simple api, #3254
	* allow to execute async HTTP requests from JS, #3152
	* do not contact webservice if it is not enabled by the user, #2968
	* fix parameter verification, #2600
	* set a 5 minute timeout for URL requests, #2464
	* automatically clear panic and fire states, #2561
	* log device token in JSON requests, #1915
	* allow device configuration if it is not blocked, #3027
	* add sleep when adding device to group, #2578
	* read out and provide device configuration lock flag, #2619
	* automatically reset fire alarm after 6 hours, #2883
	* notify webservice of apartment changes
	* listen do dSM property flag changes on the bus and update model, #974
	* enable POST and custom headers in curl
	* add GTIN to getStructure(), #2717
	* add support for TNY devices, #2675
	* ignore responses from dsm's that do not support room states, #2590
	* fix use of unitialized memory
	* add a delay to broadcast requests on certain dS485 calls, #2611
	* fix state events for groups, #2590
	* read out and track states for light group in each zone, #2590

v1.21.2	14.05.2013
	* adjust button id for area buttons when assigning the button to a user
	  group, #2439
	* resolve cyclic shared_ptr references when removing devices, #2401
	* remove any whitespace form the cookie key, #2489
	* add implementation for Device::getBinaryInput()
	* add error message for new dSM API return code, #2155
	* add AKM to active group, 2445
	* use new dsid generator methods provided by libdsmapi, #2400
	* publish device GTIN and hardware info in prop tree, #2400
	* devices SDS20x and SDS22x have identical features, #2472
	* fix dss dsid network interface detection

v1.21.1	03.05.2013
	* catch scripting exceptions in getState, #2444
	* set user groups states for wind, rain and hail by scene calls, #2438
	* do not reset fire state on startup, #2336
	* fix binary input events on startup, #2331

v1.21.0	15.04.2013
	* fixed SOAP compilation
	* also block get/setSceneValue and sceneMode, #2384
	* send mail when an executionDenied event is received, #2183
	* catch exception when trying to access a state, #2407

v1.20.0	03.04.2013
	* control device update task that is running on dSA, #2190
	* do not allow to save locked scenes
	* add a JSON call to retrieve list of locked scenes
	* fixed AKM off_falling_edge setting, #2308
	* check for valid UTF-8 input when setting group names, #2304
	* fixed extended scene value calculation
	* fix synchronization of user groups in the model, #2277
	* fix old timestamp when last dSM in set is offline
	* automatically adjust button id when changing the button configuration
	  to control a user group, #2260
	* block non manual actions in special cases, #2183
	* added scripting methods to generate call/undo scene system level
	  events, #2191

v1.19.2 01.03.2013
	* fix system trigger user-defined-actions, #2300
	* synchronize binary inputs on a separate task, #2287

v1.19.1	26.02.2013
	* remove panic and alarm state subscriptions, #2276
	* remove circular dependency for stateChange and callScene events, #2279
	* fix wrong variable reference and race condition, #2289
	* fix smoke detector and fire state change

v1.19.0 15.02.2013
	* default state value is inactive, #2187
	* added AKMInputProperty value to getStructure response, #2180
	* Update AKM icon, #2180
	* handle AKMs with a single input similar as devices without output, #2184
	* add setButtonActiveGroup call, #2184
	* add buttonGroupMembership (=JokerColor) to device JSON, #2184
	* joker group is stored in GroupMembership instead of ActiveGroup, #2184
	* if device has no output button is active in group, #2184
	* add setDeviceButtonActiveGroup() to Device, #2184
	* fix stateChange event log to include a state name
	* automatic posting of fire, wind and rain system events, #2166
	* device request handler must call device config methods, #2204
	* added json methods to set group names and standard group id, #2213
	* synchronize user group setup over any dsMeter, #2212
	* extended busscanner to readout all group data, #2165
	* fix stateChange system trigger, do not use "name" as parameter
	* add change-state as system action for add-ons, #2186
	* WebServer - Wrap JSON answer in callback for crosssite-query
      compatibility (jsonp)
	* Metering - fix aggregation discarding second meter values
	* use device isValid flag to indicate synchronization status, #1710
	* add a device IsValid flag
	* Metering/JSMetering - Add support for getAggregatedValues,
	  getAggregatedLatest
	* Metering - aggregate metering values from multiple dSM
	* fix energy counter calculation
	* fix rescanDevice synchronization for state inputs, #2177
	* add stateChange event as system trigger
	* use dsm event counter to avoid unecessary synchronization, #2125
	* add simple class for a persistent counter value
	* use new state object to manage binary input states, #2125
	* add new apartment high level events
	* added class for state handling
	* Make MAC based dSID available via JSON, #1020
	* observe device presence callback, #1767
	* Add interface to set/read AKM input properties, #2126
	* Catch exceptions in download handler, #1912
	* add json methods for akm binary inputs, #2126
	* optimize trigger and condition evaluation
	* get trigger parameters as strings, #2133
	* add binary inputs to device and export to property tree, #2091
	* subscribe system trigger to binary input event, #2042
	* added event handler for binary inputs, #2042
	* Remove red/green from getReachableGroups, #1891
	* add support for property query for floating types
	* represent energy meter values as float
	* decode akm product type
	* add system trigger for binary input events
	* inactive devices should not be removed from the dsm, #1767
	* Apartment::removeDevice must cleanup dsm device list, #2107

v1.18.0 30.11.2012
	* add binary inputs to getStructure
	* add missing OEM data to getStructure
	* add binary inputs to device and export to property tree
	* readout binary input table entries from dSM, #2042
	* Remove red/gred from getReachableGroups, #1891
	* represent energy meter values as float
	* add floating type to property tree, #1910
	* decode akm product type
	* add system trigger for binary input events
	* added event handler for binary inputs, #2042
	* inactive devices should not be removed from the dsm, #1767
	* removeDevice must cleanup dsm device list, #2107, #2035

v1.17.4 30.11.2012
	* fix crash on property tree read with non-ean devices
	* escape strings read from webservices
	* dont fail on broadcast dsm-api call when removing a device, #2112

v1.17.3 20.11.2012
	* system-actions ignore the condition when tested, #2041

v1.17.2 16.11.2012
	* add more logging for dsm discovery, #2035
	* be more tolerant when moving devices, #2007
	* make cURL library mandantory
	* restructure ean data web request, use final url, #2044
	* add inet state, refresh oem data every 24h, #2030
	* fix system event log OriginId for new action handler, #2063
	* fix uda event as trigger, #2048

v1.17.1 02.11.2012
	* add random data to secure session tokens, #1908
	* fix time range condition checks, #2019
	* add daylight state, #2011
	* Broadcast remove zones on removeZone JSON call, #1679
	* assume the energy counter started at zero if there is no more data, #2015
	* ean device bugfixes - allow no icon, fix wrong sign extention,
	  have a default icon
	* restart Bonjour service when changing the name, #1573
	* set "dSS" as apartment name if empty, #2013
	* state_change event was never scheduled due to wrong time string
	  calculation, #2027
	* fix wrong configuration of ZWS devices, #1673
	* Fix js warning in http module, #1907

v1.17.0 22.10.2012
	* fixed time-start condition, added time-end check
	* fix system condition weekday processing
	* add /json/apartment/getReachableGroups call, #1824
	* fix compile warnings, #1926
	* add SW/GE-SDS220 support, #1993
	* add mail handling for mail-file-generation-only mode, #1591
	* also set/clear the "don't care" flag on the area STOP scene, #1991
	* support OEM specific information (EAN, etc.), #1914
	* added check for forced scene calls in system trigger, #1539
	* add undo event to system action and trigger handlers, #1611
	* fix URL calls that did not work from system add-ons, #1967
	* use a single sendmail thread for each mail action, #1502

v1.16.2 08.10.2012
	* fix action handler "delay" node evaluation, #1959

v1.16.1	24.09.2012
	* no need to set group when not both devices are Jocker devices, #1953
	* check if device supports pairing when evaluation master/slave, #1941
	* fix force scene calls in system action handler
	* fix timed events handling, do not lose time+0 events anymore
	* fix out of tree compilation when SOAP is disabled

v1.16.0 10.09.2012
	* implemented system action / system trigger script functionality in the
	  dSS, #1838
	* added on/off switch events as app-trigger, #1720
	* fixed out of tree compilation
	* do not delay button inputs for turbo or switch modes, #1838, #1720
	* fixed Device.setOutputValue() scripting method
	* removed JS caching code, feature turned out to be unusable for us

v1.15.0 28.08.2012
	* fix typos in system_condition script
	* remove devices from all connected dSMeters, #1780

v1.14.3 13.07.2012
	* check authentication of all JSON requests (except /system), #1794
	* check dSM-api revision before reading device infos, #1820
	* remove slave device too, if master device is removed, #1814
	* fix condition script to query property values

v1.14.2	30.07.2012
	* check model consistency before removing device, #1715
	* set close on exec flag for sockets and file handles, #1502
	* various scripting related bugfixes
	* reset cached power consumption on dSM disconnect, #1734
	* generate scripting events for device call scene requests, #1705
	* generate device callScene events for Local-Stop messages, 1655
	* add forced flag to callScene model events, #1539
	* handle system signals in a seperate pthread, #1717

v1.14.1 13.07.2012
	* fix button ID configuration for GE SDS-200

v1.14.0 06.07.2012
	* link with tcmalloc if available
	* store script execution count and processing time in the property tree
	* keep js scripting context alive if caching is enabled, #1542
	* compile js scripts only once to reduce overall script execution
	  time, #1542
	* added support for GE SDS-200 klemme configuration, #1625
	* fix "inactive since" timestamp for devices, #1702
	* fix update of system states
	* sync slave device settings with master devices, #1273
	* sync name of slave devices if it is empty, #1741

v1.13.0 27.06.2012
	* fix build with --disable-soap configure parameter, #1696
	* handle multibuttons internally (API change), #1273

v1.12.0 20.06.2012
	* split system actions to support delayed execution (#1547)
	* query inactive devices from dSMeters (#1273)

v1.11.0 04.06.2012
	* synchronize with ds485-core bus state name changes
	* remember when the device became inactive (#887)
	* added gcov support to build system (#1555)
	* disconnect curl sessions if there was more than 30s of non activity

v1.10.0 10.02.2012
	* remove the cmake build system
	* add JSON for adding/removing devices to/from areas (#1534)
	* add event table index to sensor events (#1570)
	* validate incoming strings for UTF-8 compatibility (#1554)
	* allow blanking (deletion) of apartment/zone/dSM/scene names (#603)
	* fix POST handling in system scripts (#1587)
	* keep rest of JS running during curl requests

v1.9.2 05.04.2012
	* run url action in own thread, set up curl connection timeout
	  of 120 seconds (#1583)
	* add sensor event table index to model events (#1570)

v1.9.1 26.03.2012
	* fix scripting Device.callScene to allow forceScene calls
	* check for node presence before accessing value in action.js
	* fixed missing backend javascript file for install target
	* added monitoring nodes for event processing

v1.9.0 23.03.2012
	* resolve relative javascript handler path's with datadir (#1367)
	* fix parsing of apartment.xml (#1509)
	* re-enable backtrace generation (#1510)
	* changed subscriptions to use relative path and moved js modules into
	  scripts directory (#1367)
	* remove obsolete simulation files
	* send mails with default content-type utf-8, #1195
	* set hysteresis to 0 for devices with firmware older than 3.2.8
	* publish distro version in property tree, #1506
	* fix MAC address in system/host/interfaces, was just a hex representation
	  of the IP address before
	* changed system-event log layout (#1525)
	* fix property tree nodes for device groups
	* added backend scripts for common event handling

v1.8.0 12.03.2012
	* completely get rid of Poco, use expat for all XML parsing
	* new JSON calls for event table configuration
	* publish event names in property tree
	* process SensorEvent callbacks
	* require dSM to have at least API version 2.0

v1.7.0 28.02.2012
	* removed deprecated email plugin handler
	* added scripting method to set high level states (#1312),
	  load state definitions from subscription xml's,
	  added state handler scripts for call scene events and solar times
	* replace popen/fork with posix_spawn to execute sendmail in a new
	  detached thread (#1416)
	* add origin Device DSID to callScene events (#1357)
	* compile again on MacOS X (#1001)
	* implement undo scene handling (#1311)
	* add scripting method Zone.blink (#1389)
	* synchronize last scenes from dSM scene history (#1312)

v1.6.0 13.02.2012
	* keep unit Wh for energyMeterValue in property tree, fixes #1355
	* set the maximal allowed power value for metering
	* introduce button clicks as system events, implements #1313
	* set solar times properties to empty when they do not occur today
	* also calculate civil, nautical and astronomical twilights

v1.5.2 10.02.2012
	* keep unit Wh for energyMeterValue in property tree, fixes #1355
	* set the maximal allowed power value for metering

v1.5.1 06.02.2012
	* better RRD detection on startup, avoids generation of new rrd file
	  on each startup
	* correctly handle optional getValues() parameters
	* store power series in RRD, use power series only for seconds intervall

v1.5.0 31.01.2012
	* added js scripting interface to libcurl (#1279)
	  added scripting module with a http prototype object
	* metering series do not store power values
	* add possibility to select the desired range of metering values (#1330)
	* change metering intervals (#1332)
	* reinstate "energy" series as energy counter values (#1318)
	* new series "energyDelta" with energy per resolution step. Optional in
	  "Ws" or "Wh" (default)
	* keep energy counter always increasing
	* added scripting Zone.callScene method (#842)
	* use tr1/unordered_map instead of the GCC ext/hash_map (#1290)
	* filter getReachableScenes by group (#1310)

v1.4.2 18.01.2012
	* ds485 state handling and possible dSS crash:
	  fix wrong callback registration

v1.4.1 16.01.2012
	* get rid of dSM API deprecated wranings, fixes #1269
	* correctly set present flag for zones and groups, fixes #1302
	* made system log level configurable, implements #1312
	* ignore metering callbacks that indicate an error (prevents treating
	  random data as valid metetring values)
	* changed js Metering.getValues() to return double instead of
	  int values, fixes #1317
	* reenable bonjour support (got broken in the last release)
	* flush dirty datamodel after initialization is complete, fixes #1270
	* fixed solar computer warnings
	* further improvements and fixes in the new build system

v1.4.0 05.01.2012
	* read and save energy values in Ws instead of Wh from the dSM
	* added unit parameter to JSON and SOAP API to request metering data in Ws
	  or Wh
	* reworked dSM readout, now using dSM hash again to optimize readout
	* free user object in authentication methods
	* added autoools support
